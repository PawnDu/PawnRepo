package com.doocker.crm.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SeekfollowExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public SeekfollowExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andFollowidIsNull() {
            addCriterion("followid is null");
            return (Criteria) this;
        }

        public Criteria andFollowidIsNotNull() {
            addCriterion("followid is not null");
            return (Criteria) this;
        }

        public Criteria andFollowidEqualTo(Integer value) {
            addCriterion("followid =", value, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidNotEqualTo(Integer value) {
            addCriterion("followid <>", value, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidGreaterThan(Integer value) {
            addCriterion("followid >", value, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidGreaterThanOrEqualTo(Integer value) {
            addCriterion("followid >=", value, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidLessThan(Integer value) {
            addCriterion("followid <", value, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidLessThanOrEqualTo(Integer value) {
            addCriterion("followid <=", value, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidIn(List<Integer> values) {
            addCriterion("followid in", values, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidNotIn(List<Integer> values) {
            addCriterion("followid not in", values, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidBetween(Integer value1, Integer value2) {
            addCriterion("followid between", value1, value2, "followid");
            return (Criteria) this;
        }

        public Criteria andFollowidNotBetween(Integer value1, Integer value2) {
            addCriterion("followid not between", value1, value2, "followid");
            return (Criteria) this;
        }

        public Criteria andSeekdateIsNull() {
            addCriterion("seekDate is null");
            return (Criteria) this;
        }

        public Criteria andSeekdateIsNotNull() {
            addCriterion("seekDate is not null");
            return (Criteria) this;
        }

        public Criteria andSeekdateEqualTo(Date value) {
            addCriterionForJDBCDate("seekDate =", value, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("seekDate <>", value, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateGreaterThan(Date value) {
            addCriterionForJDBCDate("seekDate >", value, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("seekDate >=", value, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateLessThan(Date value) {
            addCriterionForJDBCDate("seekDate <", value, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("seekDate <=", value, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateIn(List<Date> values) {
            addCriterionForJDBCDate("seekDate in", values, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("seekDate not in", values, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("seekDate between", value1, value2, "seekdate");
            return (Criteria) this;
        }

        public Criteria andSeekdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("seekDate not between", value1, value2, "seekdate");
            return (Criteria) this;
        }

        public Criteria andStunameIsNull() {
            addCriterion("stuname is null");
            return (Criteria) this;
        }

        public Criteria andStunameIsNotNull() {
            addCriterion("stuname is not null");
            return (Criteria) this;
        }

        public Criteria andStunameEqualTo(String value) {
            addCriterion("stuname =", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotEqualTo(String value) {
            addCriterion("stuname <>", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameGreaterThan(String value) {
            addCriterion("stuname >", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameGreaterThanOrEqualTo(String value) {
            addCriterion("stuname >=", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameLessThan(String value) {
            addCriterion("stuname <", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameLessThanOrEqualTo(String value) {
            addCriterion("stuname <=", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameLike(String value) {
            addCriterion("stuname like", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotLike(String value) {
            addCriterion("stuname not like", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameIn(List<String> values) {
            addCriterion("stuname in", values, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotIn(List<String> values) {
            addCriterion("stuname not in", values, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameBetween(String value1, String value2) {
            addCriterion("stuname between", value1, value2, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotBetween(String value1, String value2) {
            addCriterion("stuname not between", value1, value2, "stuname");
            return (Criteria) this;
        }

        public Criteria andSeekfunIsNull() {
            addCriterion("seekFun is null");
            return (Criteria) this;
        }

        public Criteria andSeekfunIsNotNull() {
            addCriterion("seekFun is not null");
            return (Criteria) this;
        }

        public Criteria andSeekfunEqualTo(String value) {
            addCriterion("seekFun =", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunNotEqualTo(String value) {
            addCriterion("seekFun <>", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunGreaterThan(String value) {
            addCriterion("seekFun >", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunGreaterThanOrEqualTo(String value) {
            addCriterion("seekFun >=", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunLessThan(String value) {
            addCriterion("seekFun <", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunLessThanOrEqualTo(String value) {
            addCriterion("seekFun <=", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunLike(String value) {
            addCriterion("seekFun like", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunNotLike(String value) {
            addCriterion("seekFun not like", value, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunIn(List<String> values) {
            addCriterion("seekFun in", values, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunNotIn(List<String> values) {
            addCriterion("seekFun not in", values, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunBetween(String value1, String value2) {
            addCriterion("seekFun between", value1, value2, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekfunNotBetween(String value1, String value2) {
            addCriterion("seekFun not between", value1, value2, "seekfun");
            return (Criteria) this;
        }

        public Criteria andSeekbyIsNull() {
            addCriterion("seekby is null");
            return (Criteria) this;
        }

        public Criteria andSeekbyIsNotNull() {
            addCriterion("seekby is not null");
            return (Criteria) this;
        }

        public Criteria andSeekbyEqualTo(String value) {
            addCriterion("seekby =", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyNotEqualTo(String value) {
            addCriterion("seekby <>", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyGreaterThan(String value) {
            addCriterion("seekby >", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyGreaterThanOrEqualTo(String value) {
            addCriterion("seekby >=", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyLessThan(String value) {
            addCriterion("seekby <", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyLessThanOrEqualTo(String value) {
            addCriterion("seekby <=", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyLike(String value) {
            addCriterion("seekby like", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyNotLike(String value) {
            addCriterion("seekby not like", value, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyIn(List<String> values) {
            addCriterion("seekby in", values, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyNotIn(List<String> values) {
            addCriterion("seekby not in", values, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyBetween(String value1, String value2) {
            addCriterion("seekby between", value1, value2, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekbyNotBetween(String value1, String value2) {
            addCriterion("seekby not between", value1, value2, "seekby");
            return (Criteria) this;
        }

        public Criteria andSeekrusIsNull() {
            addCriterion("seekRus is null");
            return (Criteria) this;
        }

        public Criteria andSeekrusIsNotNull() {
            addCriterion("seekRus is not null");
            return (Criteria) this;
        }

        public Criteria andSeekrusEqualTo(String value) {
            addCriterion("seekRus =", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusNotEqualTo(String value) {
            addCriterion("seekRus <>", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusGreaterThan(String value) {
            addCriterion("seekRus >", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusGreaterThanOrEqualTo(String value) {
            addCriterion("seekRus >=", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusLessThan(String value) {
            addCriterion("seekRus <", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusLessThanOrEqualTo(String value) {
            addCriterion("seekRus <=", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusLike(String value) {
            addCriterion("seekRus like", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusNotLike(String value) {
            addCriterion("seekRus not like", value, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusIn(List<String> values) {
            addCriterion("seekRus in", values, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusNotIn(List<String> values) {
            addCriterion("seekRus not in", values, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusBetween(String value1, String value2) {
            addCriterion("seekRus between", value1, value2, "seekrus");
            return (Criteria) this;
        }

        public Criteria andSeekrusNotBetween(String value1, String value2) {
            addCriterion("seekRus not between", value1, value2, "seekrus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seekfollow
     *
     * @mbggenerated do_not_delete_during_merge Tue Jul 25 15:27:57 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table seekfollow
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}