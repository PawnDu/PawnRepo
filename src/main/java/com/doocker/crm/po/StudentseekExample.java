package com.doocker.crm.po;

import java.util.ArrayList;
import java.util.List;

public class StudentseekExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public StudentseekExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSeekidIsNull() {
            addCriterion("seekid is null");
            return (Criteria) this;
        }

        public Criteria andSeekidIsNotNull() {
            addCriterion("seekid is not null");
            return (Criteria) this;
        }

        public Criteria andSeekidEqualTo(Integer value) {
            addCriterion("seekid =", value, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidNotEqualTo(Integer value) {
            addCriterion("seekid <>", value, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidGreaterThan(Integer value) {
            addCriterion("seekid >", value, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidGreaterThanOrEqualTo(Integer value) {
            addCriterion("seekid >=", value, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidLessThan(Integer value) {
            addCriterion("seekid <", value, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidLessThanOrEqualTo(Integer value) {
            addCriterion("seekid <=", value, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidIn(List<Integer> values) {
            addCriterion("seekid in", values, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidNotIn(List<Integer> values) {
            addCriterion("seekid not in", values, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidBetween(Integer value1, Integer value2) {
            addCriterion("seekid between", value1, value2, "seekid");
            return (Criteria) this;
        }

        public Criteria andSeekidNotBetween(Integer value1, Integer value2) {
            addCriterion("seekid not between", value1, value2, "seekid");
            return (Criteria) this;
        }

        public Criteria andStunameIsNull() {
            addCriterion("stuname is null");
            return (Criteria) this;
        }

        public Criteria andStunameIsNotNull() {
            addCriterion("stuname is not null");
            return (Criteria) this;
        }

        public Criteria andStunameEqualTo(String value) {
            addCriterion("stuname =", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotEqualTo(String value) {
            addCriterion("stuname <>", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameGreaterThan(String value) {
            addCriterion("stuname >", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameGreaterThanOrEqualTo(String value) {
            addCriterion("stuname >=", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameLessThan(String value) {
            addCriterion("stuname <", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameLessThanOrEqualTo(String value) {
            addCriterion("stuname <=", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameLike(String value) {
            addCriterion("stuname like", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotLike(String value) {
            addCriterion("stuname not like", value, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameIn(List<String> values) {
            addCriterion("stuname in", values, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotIn(List<String> values) {
            addCriterion("stuname not in", values, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameBetween(String value1, String value2) {
            addCriterion("stuname between", value1, value2, "stuname");
            return (Criteria) this;
        }

        public Criteria andStunameNotBetween(String value1, String value2) {
            addCriterion("stuname not between", value1, value2, "stuname");
            return (Criteria) this;
        }

        public Criteria andStusexIsNull() {
            addCriterion("stusex is null");
            return (Criteria) this;
        }

        public Criteria andStusexIsNotNull() {
            addCriterion("stusex is not null");
            return (Criteria) this;
        }

        public Criteria andStusexEqualTo(Integer value) {
            addCriterion("stusex =", value, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexNotEqualTo(Integer value) {
            addCriterion("stusex <>", value, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexGreaterThan(Integer value) {
            addCriterion("stusex >", value, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexGreaterThanOrEqualTo(Integer value) {
            addCriterion("stusex >=", value, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexLessThan(Integer value) {
            addCriterion("stusex <", value, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexLessThanOrEqualTo(Integer value) {
            addCriterion("stusex <=", value, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexIn(List<Integer> values) {
            addCriterion("stusex in", values, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexNotIn(List<Integer> values) {
            addCriterion("stusex not in", values, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexBetween(Integer value1, Integer value2) {
            addCriterion("stusex between", value1, value2, "stusex");
            return (Criteria) this;
        }

        public Criteria andStusexNotBetween(Integer value1, Integer value2) {
            addCriterion("stusex not between", value1, value2, "stusex");
            return (Criteria) this;
        }

        public Criteria andStuphoneIsNull() {
            addCriterion("stuphone is null");
            return (Criteria) this;
        }

        public Criteria andStuphoneIsNotNull() {
            addCriterion("stuphone is not null");
            return (Criteria) this;
        }

        public Criteria andStuphoneEqualTo(Long value) {
            addCriterion("stuphone =", value, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneNotEqualTo(Long value) {
            addCriterion("stuphone <>", value, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneGreaterThan(Long value) {
            addCriterion("stuphone >", value, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneGreaterThanOrEqualTo(Long value) {
            addCriterion("stuphone >=", value, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneLessThan(Long value) {
            addCriterion("stuphone <", value, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneLessThanOrEqualTo(Long value) {
            addCriterion("stuphone <=", value, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneIn(List<Long> values) {
            addCriterion("stuphone in", values, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneNotIn(List<Long> values) {
            addCriterion("stuphone not in", values, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneBetween(Long value1, Long value2) {
            addCriterion("stuphone between", value1, value2, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuphoneNotBetween(Long value1, Long value2) {
            addCriterion("stuphone not between", value1, value2, "stuphone");
            return (Criteria) this;
        }

        public Criteria andStuqqIsNull() {
            addCriterion("stuqq is null");
            return (Criteria) this;
        }

        public Criteria andStuqqIsNotNull() {
            addCriterion("stuqq is not null");
            return (Criteria) this;
        }

        public Criteria andStuqqEqualTo(Integer value) {
            addCriterion("stuqq =", value, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqNotEqualTo(Integer value) {
            addCriterion("stuqq <>", value, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqGreaterThan(Integer value) {
            addCriterion("stuqq >", value, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqGreaterThanOrEqualTo(Integer value) {
            addCriterion("stuqq >=", value, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqLessThan(Integer value) {
            addCriterion("stuqq <", value, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqLessThanOrEqualTo(Integer value) {
            addCriterion("stuqq <=", value, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqIn(List<Integer> values) {
            addCriterion("stuqq in", values, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqNotIn(List<Integer> values) {
            addCriterion("stuqq not in", values, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqBetween(Integer value1, Integer value2) {
            addCriterion("stuqq between", value1, value2, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuqqNotBetween(Integer value1, Integer value2) {
            addCriterion("stuqq not between", value1, value2, "stuqq");
            return (Criteria) this;
        }

        public Criteria andStuclassIsNull() {
            addCriterion("stuclass is null");
            return (Criteria) this;
        }

        public Criteria andStuclassIsNotNull() {
            addCriterion("stuclass is not null");
            return (Criteria) this;
        }

        public Criteria andStuclassEqualTo(String value) {
            addCriterion("stuclass =", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassNotEqualTo(String value) {
            addCriterion("stuclass <>", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassGreaterThan(String value) {
            addCriterion("stuclass >", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassGreaterThanOrEqualTo(String value) {
            addCriterion("stuclass >=", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassLessThan(String value) {
            addCriterion("stuclass <", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassLessThanOrEqualTo(String value) {
            addCriterion("stuclass <=", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassLike(String value) {
            addCriterion("stuclass like", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassNotLike(String value) {
            addCriterion("stuclass not like", value, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassIn(List<String> values) {
            addCriterion("stuclass in", values, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassNotIn(List<String> values) {
            addCriterion("stuclass not in", values, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassBetween(String value1, String value2) {
            addCriterion("stuclass between", value1, value2, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStuclassNotBetween(String value1, String value2) {
            addCriterion("stuclass not between", value1, value2, "stuclass");
            return (Criteria) this;
        }

        public Criteria andStustatusIsNull() {
            addCriterion("stustatus is null");
            return (Criteria) this;
        }

        public Criteria andStustatusIsNotNull() {
            addCriterion("stustatus is not null");
            return (Criteria) this;
        }

        public Criteria andStustatusEqualTo(String value) {
            addCriterion("stustatus =", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusNotEqualTo(String value) {
            addCriterion("stustatus <>", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusGreaterThan(String value) {
            addCriterion("stustatus >", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusGreaterThanOrEqualTo(String value) {
            addCriterion("stustatus >=", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusLessThan(String value) {
            addCriterion("stustatus <", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusLessThanOrEqualTo(String value) {
            addCriterion("stustatus <=", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusLike(String value) {
            addCriterion("stustatus like", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusNotLike(String value) {
            addCriterion("stustatus not like", value, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusIn(List<String> values) {
            addCriterion("stustatus in", values, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusNotIn(List<String> values) {
            addCriterion("stustatus not in", values, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusBetween(String value1, String value2) {
            addCriterion("stustatus between", value1, value2, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStustatusNotBetween(String value1, String value2) {
            addCriterion("stustatus not between", value1, value2, "stustatus");
            return (Criteria) this;
        }

        public Criteria andStaffidIsNull() {
            addCriterion("staffid is null");
            return (Criteria) this;
        }

        public Criteria andStaffidIsNotNull() {
            addCriterion("staffid is not null");
            return (Criteria) this;
        }

        public Criteria andStaffidEqualTo(String value) {
            addCriterion("staffid =", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidNotEqualTo(String value) {
            addCriterion("staffid <>", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidGreaterThan(String value) {
            addCriterion("staffid >", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidGreaterThanOrEqualTo(String value) {
            addCriterion("staffid >=", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidLessThan(String value) {
            addCriterion("staffid <", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidLessThanOrEqualTo(String value) {
            addCriterion("staffid <=", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidLike(String value) {
            addCriterion("staffid like", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidNotLike(String value) {
            addCriterion("staffid not like", value, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidIn(List<String> values) {
            addCriterion("staffid in", values, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidNotIn(List<String> values) {
            addCriterion("staffid not in", values, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidBetween(String value1, String value2) {
            addCriterion("staffid between", value1, value2, "staffid");
            return (Criteria) this;
        }

        public Criteria andStaffidNotBetween(String value1, String value2) {
            addCriterion("staffid not between", value1, value2, "staffid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table studentseek
     *
     * @mbggenerated do_not_delete_during_merge Tue Jul 25 15:27:57 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table studentseek
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}