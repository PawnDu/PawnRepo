package com.doocker.crm.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TransferExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public TransferExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTidIsNull() {
            addCriterion("tid is null");
            return (Criteria) this;
        }

        public Criteria andTidIsNotNull() {
            addCriterion("tid is not null");
            return (Criteria) this;
        }

        public Criteria andTidEqualTo(Integer value) {
            addCriterion("tid =", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotEqualTo(Integer value) {
            addCriterion("tid <>", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidGreaterThan(Integer value) {
            addCriterion("tid >", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidGreaterThanOrEqualTo(Integer value) {
            addCriterion("tid >=", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidLessThan(Integer value) {
            addCriterion("tid <", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidLessThanOrEqualTo(Integer value) {
            addCriterion("tid <=", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidIn(List<Integer> values) {
            addCriterion("tid in", values, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotIn(List<Integer> values) {
            addCriterion("tid not in", values, "tid");
            return (Criteria) this;
        }

        public Criteria andTidBetween(Integer value1, Integer value2) {
            addCriterion("tid between", value1, value2, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotBetween(Integer value1, Integer value2) {
            addCriterion("tid not between", value1, value2, "tid");
            return (Criteria) this;
        }

        public Criteria andTdateIsNull() {
            addCriterion("tdate is null");
            return (Criteria) this;
        }

        public Criteria andTdateIsNotNull() {
            addCriterion("tdate is not null");
            return (Criteria) this;
        }

        public Criteria andTdateEqualTo(Date value) {
            addCriterionForJDBCDate("tdate =", value, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("tdate <>", value, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateGreaterThan(Date value) {
            addCriterionForJDBCDate("tdate >", value, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tdate >=", value, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateLessThan(Date value) {
            addCriterionForJDBCDate("tdate <", value, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tdate <=", value, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateIn(List<Date> values) {
            addCriterionForJDBCDate("tdate in", values, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("tdate not in", values, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tdate between", value1, value2, "tdate");
            return (Criteria) this;
        }

        public Criteria andTdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tdate not between", value1, value2, "tdate");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefIsNull() {
            addCriterion("staff_id_bef is null");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefIsNotNull() {
            addCriterion("staff_id_bef is not null");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefEqualTo(String value) {
            addCriterion("staff_id_bef =", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefNotEqualTo(String value) {
            addCriterion("staff_id_bef <>", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefGreaterThan(String value) {
            addCriterion("staff_id_bef >", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefGreaterThanOrEqualTo(String value) {
            addCriterion("staff_id_bef >=", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefLessThan(String value) {
            addCriterion("staff_id_bef <", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefLessThanOrEqualTo(String value) {
            addCriterion("staff_id_bef <=", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefLike(String value) {
            addCriterion("staff_id_bef like", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefNotLike(String value) {
            addCriterion("staff_id_bef not like", value, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefIn(List<String> values) {
            addCriterion("staff_id_bef in", values, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefNotIn(List<String> values) {
            addCriterion("staff_id_bef not in", values, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefBetween(String value1, String value2) {
            addCriterion("staff_id_bef between", value1, value2, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdBefNotBetween(String value1, String value2) {
            addCriterion("staff_id_bef not between", value1, value2, "staffIdBef");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowIsNull() {
            addCriterion("staff_id_now is null");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowIsNotNull() {
            addCriterion("staff_id_now is not null");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowEqualTo(String value) {
            addCriterion("staff_id_now =", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowNotEqualTo(String value) {
            addCriterion("staff_id_now <>", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowGreaterThan(String value) {
            addCriterion("staff_id_now >", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowGreaterThanOrEqualTo(String value) {
            addCriterion("staff_id_now >=", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowLessThan(String value) {
            addCriterion("staff_id_now <", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowLessThanOrEqualTo(String value) {
            addCriterion("staff_id_now <=", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowLike(String value) {
            addCriterion("staff_id_now like", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowNotLike(String value) {
            addCriterion("staff_id_now not like", value, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowIn(List<String> values) {
            addCriterion("staff_id_now in", values, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowNotIn(List<String> values) {
            addCriterion("staff_id_now not in", values, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowBetween(String value1, String value2) {
            addCriterion("staff_id_now between", value1, value2, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andStaffIdNowNotBetween(String value1, String value2) {
            addCriterion("staff_id_now not between", value1, value2, "staffIdNow");
            return (Criteria) this;
        }

        public Criteria andBynoIsNull() {
            addCriterion("byno is null");
            return (Criteria) this;
        }

        public Criteria andBynoIsNotNull() {
            addCriterion("byno is not null");
            return (Criteria) this;
        }

        public Criteria andBynoEqualTo(Integer value) {
            addCriterion("byno =", value, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoNotEqualTo(Integer value) {
            addCriterion("byno <>", value, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoGreaterThan(Integer value) {
            addCriterion("byno >", value, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoGreaterThanOrEqualTo(Integer value) {
            addCriterion("byno >=", value, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoLessThan(Integer value) {
            addCriterion("byno <", value, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoLessThanOrEqualTo(Integer value) {
            addCriterion("byno <=", value, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoIn(List<Integer> values) {
            addCriterion("byno in", values, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoNotIn(List<Integer> values) {
            addCriterion("byno not in", values, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoBetween(Integer value1, Integer value2) {
            addCriterion("byno between", value1, value2, "byno");
            return (Criteria) this;
        }

        public Criteria andBynoNotBetween(Integer value1, Integer value2) {
            addCriterion("byno not between", value1, value2, "byno");
            return (Criteria) this;
        }

        public Criteria andByreasonIsNull() {
            addCriterion("byreason is null");
            return (Criteria) this;
        }

        public Criteria andByreasonIsNotNull() {
            addCriterion("byreason is not null");
            return (Criteria) this;
        }

        public Criteria andByreasonEqualTo(String value) {
            addCriterion("byreason =", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonNotEqualTo(String value) {
            addCriterion("byreason <>", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonGreaterThan(String value) {
            addCriterion("byreason >", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonGreaterThanOrEqualTo(String value) {
            addCriterion("byreason >=", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonLessThan(String value) {
            addCriterion("byreason <", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonLessThanOrEqualTo(String value) {
            addCriterion("byreason <=", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonLike(String value) {
            addCriterion("byreason like", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonNotLike(String value) {
            addCriterion("byreason not like", value, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonIn(List<String> values) {
            addCriterion("byreason in", values, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonNotIn(List<String> values) {
            addCriterion("byreason not in", values, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonBetween(String value1, String value2) {
            addCriterion("byreason between", value1, value2, "byreason");
            return (Criteria) this;
        }

        public Criteria andByreasonNotBetween(String value1, String value2) {
            addCriterion("byreason not between", value1, value2, "byreason");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transfer
     *
     * @mbggenerated do_not_delete_during_merge Tue Jul 25 15:27:57 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table transfer
     *
     * @mbggenerated Tue Jul 25 15:27:57 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}